"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CommandKit = void 0;
const handlers_1 = require("./handlers");
class CommandKit {
    _data;
    constructor({ ...options }) {
        if (!options.client) {
            throw new Error('"client" is required when instantiating CommandKit.');
        }
        if (options.validationsPath && !options.commandsPath) {
            throw new Error('"commandsPath" is required when "validationsPath" is set.');
        }
        this._data = {
            ...options,
            commands: [],
        };
        this._init();
    }
    _init() {
        // Event handler
        if (this._data.eventsPath) {
            new handlers_1.EventHandler({
                client: this._data.client,
                eventsPath: this._data.eventsPath,
            });
        }
        // Validation handler
        let validationFunctions = [];
        if (this._data.validationsPath) {
            const validationHandler = new handlers_1.ValidationHandler({
                validationsPath: this._data.validationsPath,
            });
            validationFunctions = validationHandler.getValidations();
        }
        // Command handler
        if (this._data.commandsPath) {
            const commandHandler = new handlers_1.CommandHandler({
                client: this._data.client,
                commandsPath: this._data.commandsPath,
                devGuildIds: this._data.devGuildIds || [],
                devUserIds: this._data.devUserIds || [],
                validations: validationFunctions,
            });
            this._data.commands = commandHandler.getCommands();
        }
    }
    get commands() {
        return this._data.commands.map((cmd) => {
            const { run, ...command } = cmd;
            return command;
        });
    }
}
exports.CommandKit = CommandKit;
