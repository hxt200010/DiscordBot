import { CommandKitOptions } from '../typings';
export declare class CommandKit {
    private _data;
    constructor({ ...options }: CommandKitOptions);
    private _init;
    get commands(): ({
        data: import("@discordjs/builders").SlashCommandBuilder | {
            name: string;
            name_localizations?: any;
            description: string;
            dm_permission?: boolean | undefined;
            options?: import("discord.js").APIApplicationCommandOption[] | undefined;
        };
        options?: {
            guildOnly?: boolean | undefined;
            devOnly?: boolean | undefined;
            deleted?: boolean | undefined;
            userPermissions?: import("discord.js").PermissionResolvable[] | undefined;
            botPermissions?: import("discord.js").PermissionResolvable[] | undefined;
        } | undefined;
    } | {
        data: import("@discordjs/builders").ContextMenuCommandBuilder | {
            name: string;
            name_localizations?: any;
            type: import("@discordjs/builders").ContextMenuCommandType;
            dm_permission?: boolean | undefined;
        };
        options?: {
            guildOnly?: boolean | undefined;
            devOnly?: boolean | undefined;
            deleted?: boolean | undefined;
            userPermissions?: import("discord.js").PermissionResolvable[] | undefined;
            botPermissions?: import("discord.js").PermissionResolvable[] | undefined;
        } | undefined;
    })[];
}
